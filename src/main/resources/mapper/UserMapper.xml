<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pro.study.dao.user.UserMybatisDao">
	<insert id="insertUser" parameterType="com.pro.study.po.role.ProAuth">
		INSERT INTO 
			pro_auth 
			(`role_id`,`role_name`,`auth_url`,`auth_flag`,`decrypt_flag`) 
		VALUES 
			(#{user.roleId}, #{user.roleName},#{user.url},#{user.authFlag},#{user.decryptFlag})
	</insert>
	<select id="findUser" resultType="com.pro.study.dto.user.UserBaseInfoDTO">
		SELECT * FROM `pro_user` WHERE `delete_flag` = ${deleteFlag} AND id = ${userId}
	</select>
	<update id="updateUserInfo"  parameterType="com.pro.study.vo.request.user.UserBaseInfoRequestVO">
		UPDATE `pro_user` SET 
		`head_image` = ${user.headImage} , 
		`phone_number` = ${user.phoneNumber},
		`email` = #{user.email} 
		 WHERE 
		 id = ${user.userId}
	</update>
	
	<select id="getCheckUserList" parameterType="com.pro.study.dto.sys.LimitDto"  resultType="com.pro.study.vo.response.user.CheckUserListReponseVO">
		SELECT	id,`email`,`phone_number` AS phoneNumber,`name`,`username` FROM `pro_user` WHERE `company_id` = #{companyId} AND delete_flag = 0 AND role_id = #{roleId}
		LIMIT ${page.limitStart},  ${page.limitEnd}
	</select>
	
	<select id="findAuthIdByName" resultType="java.lang.Long">
		SELECT id FROM `pro_role` WHERE role_name = #{roleName} AND delete_flag = 0
	</select>
	
	<select id = "selectUserTotalByRoleId" resultType="java.lang.Integer">
		SELECT COUNT(id) FROM `pro_user` WHERE `role_id` = #{roleId} AND `delete_flag` = 0
	</select>
	
	<update id="updateCheckUserInfo" parameterType="com.pro.study.dto.user.CheckUserDTO">
		UPDATE `pro_user` SET 
		`email`=#{checkUser.email},
		`id_card`=#{checkUser.idCard},
		`name`=#{checkUser.name},
		`password`=#{checkUser.passWord},
		`phone_number`=#{checkUser.phoneNumber},
		 `username`=#{checkUser.userName}
		 WHERE 
		 id = #{checkUser.id}
	</update>
</mapper>
